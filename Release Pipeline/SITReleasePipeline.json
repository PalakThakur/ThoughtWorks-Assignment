{"source":2,"revision":10,"description":null,"createdBy":{"displayName":"Palak Thakur","url":"https://spsprodcus3.vssps.visualstudio.com/A3948ae23-7353-4702-8149-8f41949cc4b5/_apis/Identities/36a550bd-d3b7-4e6c-9358-3e587150046b","_links":{"avatar":{"href":"https://legrand-bcs.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2"}},"id":"36a550bd-d3b7-4e6c-9358-3e587150046b","uniqueName":"Palak.Thakur2@harman.com","imageUrl":"https://legrand-bcs.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2","descriptor":"aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2"},"createdOn":"2019-07-05T06:45:12.977Z","modifiedBy":{"displayName":"Palak Thakur","url":"https://spsprodcus3.vssps.visualstudio.com/A3948ae23-7353-4702-8149-8f41949cc4b5/_apis/Identities/36a550bd-d3b7-4e6c-9358-3e587150046b","_links":{"avatar":{"href":"https://legrand-bcs.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2"}},"id":"36a550bd-d3b7-4e6c-9358-3e587150046b","uniqueName":"Palak.Thakur2@harman.com","imageUrl":"https://legrand-bcs.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2","descriptor":"aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2"},"modifiedOn":"2019-07-05T07:35:18.830Z","isDeleted":false,"variables":{"accesskey":{"value":""},"app_name":{"value":"companyapp"},"blobname":{"value":""},"certthumbprint":{"value":"B37F5AEA913D706D85E3D84410482F89741EE5E3"},"customidimage":{"value":"imagefolder"},"customidstyles":{"value":"stylesfolder"},"fqdn":{"value":"uat-bcs-qm-companyapp-app.azurewebsites.net"},"imageblob":{"value":""},"jar_filename":{"value":""},"java_app_service_name":{"value":""},"java_version":{"value":"\"TOMCAT|9.0-jre8\""},"pfxPassword":{"value":"uat"},"pfxPath":{"value":"uatapp.pfx"},"rg_name":{"value":""},"storageaccountname":{"value":""},"stylesblob":{"value":""},"war_filename":{"value":"ROOT"}},"variableGroups":[],"environments":[{"id":10,"name":"dev","rank":1,"owner":{"displayName":"Palak Thakur","url":"https://spsprodcus3.vssps.visualstudio.com/A3948ae23-7353-4702-8149-8f41949cc4b5/_apis/Identities/36a550bd-d3b7-4e6c-9358-3e587150046b","_links":{"avatar":{"href":"https://legrand-bcs.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2"}},"id":"36a550bd-d3b7-4e6c-9358-3e587150046b","uniqueName":"Palak.Thakur2@harman.com","imageUrl":"https://legrand-bcs.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2","descriptor":"aad.MTM3N2E4OTgtNzJjNS03NjQ3LTk4MGYtMWI2ZjM4YzIwYjM2"},"variables":{"env_name":{"value":"uat"}},"variableGroups":[38,41],"preDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":34}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":1}},"deployStep":{"id":35},"postDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":36}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":2}},"deployPhases":[{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":null,"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":69,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":1,"phaseType":1,"name":"Agent job","refName":null,"workflowTasks":[{"environment":{},"taskId":"1ae5638b-b276-4e0c-9b98-0732eb235935","version":"0.*","name":"Use Terraform 0.11.13","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"version":"0.11.13"}},{"environment":{"terraform_backend_clientSecret":"$(terraform.backend.clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Terraform Init","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"terraform init -backend-config=\"arm_subscription_id=%terraform_backend_subscriptionId%\" -backend-config=\"arm_client_id=%terraform_backend_clientId%\" -backend-config=\"arm_client_secret=%terraform_backend_clientSecret%\" -backend-config=\"arm_tenant_id=%terraform_backend_tenantId%\" -backend-config=\"resource_group_name=%terraform_backend_resourceGroup%\" -backend-config=\"storage_account_name=%terraform_backend_storageAccount%\" -backend-config=\"container_name=%terraform_backend_containerName%\" -backend-config=\"key=%app_name%-%env_name%\"","workingDirectory":"$(System.DefaultWorkingDirectory)/Terraform","failOnStderr":"false"}},{"environment":{},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Terraform Select Workspace","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"terraform workspace new %env_name%\n\nterraform workspace select %env_name%","workingDirectory":"","failOnStderr":"false"}},{"environment":{"clientSecret":"$(clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Terraform Plan","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"set TF_VAR_subscription_id=%subscriptionId%\nset TF_VAR_tenant_id=%tenantId%\nset TF_VAR_client_id=%clientId%\nset TF_VAR_client_secret=%clientSecret%\nset TF_VAR_resource_group=%resourceGroup%\n\nset TF_VAR_app_name=%app_name%\nset TF_VAR_env_name=%env_name%\nset TF_VAR_java_version=%java_version%\nset TF_VAR_jar_filename=%war_filename%\n\nterraform plan","workingDirectory":"$(System.DefaultWorkingDirectory)/Terraform","failOnStderr":"false"}},{"environment":{"clientSecret":"$(clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Terraform Apply","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"set TF_VAR_subscription_id=%subscriptionId%\nset TF_VAR_tenant_id=%tenantId%\nset TF_VAR_client_id=%clientId%\nset TF_VAR_client_secret=%clientSecret%\nset TF_VAR_resource_group=%resourceGroup%\n\nset TF_VAR_app_name=%app_name%\nset TF_VAR_env_name=%env_name%\nset TF_VAR_java_version=%java_version%\nset TF_VAR_jar_filename=%war_filename%\n\nterraform apply -auto-approve","workingDirectory":"$(System.DefaultWorkingDirectory)/Terraform","failOnStderr":"false"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Terraform Output Variables","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$rg_name = terraform output rg_name\n$java_app_service_name = terraform output java_app_service_name\n$blobname = terraform output blobname\n$storageaccountname = terraform output storageaccountname\n$imageblob = terraform output imageblob\n$stylesblob = terraform output stylesblob\n\nWrite-Host \"App Service Name: $java_app_service_name\"\nWrite-Host \"Image folder name: $imageblob\"\nWrite-Host \"Styles folder name: $stylesblob\"\nWrite-Host \"StorageAccountName: $storageaccountname\"\n\n# Set output environment for Repo URL\n\"##vso[task.setvariable variable=rg_name;]$rg_name\"\n\"##vso[task.setvariable variable=java_app_service_name;]$java_app_service_name\"\n\"##vso[task.setvariable variable=blobname;]$blobname\"\n\"##vso[task.setvariable variable=imageblob;]$imageblob\"\n\"##vso[task.setvariable variable=stylesblob;]$stylesblob\"\n\"##vso[task.setvariable variable=storageaccountname;]$storageaccountname\"","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"$(System.DefaultWorkingDirectory)/Terraform"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Get storage account access key and upload files","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-host \"Login to Azure Started...\"\nWrite-host \"The image blob is $(imageblob)\"\nWrite-host \"The styles blob is $(stylesblob)\"\n\n$imageblob = \"$(imageblob)\"\n$stylesblob = \"$(stylesblob)\"\n$applicationId = \"$(clientId)\"\n$tenantId = \"$(tenantId)\"\n$securePassword = \"$(clientSecret)\" | ConvertTo-SecureString -AsPlainText -Force\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $applicationId, $securePassword\n\nLogin-AzureRmAccount -ServicePrincipal -Credential $credential -TenantId $tenantId\n\n$rgname=\"$(rg_name)\"\n$accountname=\"$(storageaccountname)\"\n\n(Get-AzureRmStorageAccountKey -ResourceGroupName $rgname -AccountName $accountname).Value[0]\n\n$accesskey=(Get-AzureRmStorageAccountKey -ResourceGroupName \"$rgname\" -AccountName \"$accountname\").Value[0]\n\n\"##vso[task.setvariable variable=accesskey;]$accesskey\"\n\n\n\n$ctx = New-AzureStorageContext -StorageAccountKey $accesskey -StorageAccountName $accountname \n\ncd images\n\nGet-Location\n\n$dir = Get-Location\n \n$files = Get-ChildItem $dir -force| Where-Object {$_.mode -match \"-a---\"}\n\nforeach ($file in $files){ \n$file.FullName\n$fqName = $file.FullName\n \nWrite-Host \"Uploading \" $dir $file.Name  -ForegroundColor Green  \n\n      Set-AzureStorageBlobContent -Blob $file.Name -Container $imageblob -File $fqName -Context $ctx -Force \n}\n\ncd ../\ncd styles\n\nGet-Location\n\n$dir = Get-Location\n \n$files = Get-ChildItem $dir -force| Where-Object {$_.mode -match \"-a---\"}\n\nforeach ($file in $files){ \n$file.FullName\n$fqName = $file.FullName\n \nWrite-Host \"Uploading \" $dir $file.Name  -ForegroundColor Green  \n\n      Set-AzureStorageBlobContent -Blob $file.Name -Container $stylesblob -File $fqName -Context $ctx -Force \n}\n\n","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"$(System.DefaultWorkingDirectory)/_PalakThakur_PracticeAssignment/static"}},{"environment":{"clientSecret":"$(clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Az login","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"az login --service-principal -u %clientId% -p %clientSecret% --tenant %tenantId%\n","workingDirectory":"","failOnStderr":"false"}},{"environment":{"clientSecret":"$(clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Az set subscription","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"az account set --subscription %subscriptionId%\n","workingDirectory":"","failOnStderr":"false"}},{"environment":{"clientSecret":"$(clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Az deploy","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"az webapp deployment source config-zip -g %rg_name% -n %java_app_service_name% --src %war_filename%.war\n","workingDirectory":"$(System.DefaultWorkingDirectory)/_PalakThakur_PracticeAssignment","failOnStderr":"false"}},{"environment":{"clientSecret":"$(clientSecret)"},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"App Config","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"az webapp config set --resource-group %rg_name% --name %java_app_service_name% --startup-file \"mv /home/site/wwwroot/META-INF /home/site/wwwroot/webapps/ROOT/ && mv /home/site/wwwroot/Post.jsp /home/site/wwwroot/webapps/ROOT/ && mv /home/site/wwwroot/Read.jsp /home/site/wwwroot/webapps/ROOT/ && mv /home/site/wwwroot/WEB-INF /home/site/wwwroot/webapps/ROOT/ && mv /home/site/wwwroot/index.jsp /home/site/wwwroot/webapps/ROOT/\"","workingDirectory":"$(System.DefaultWorkingDirectory)/_PalakThakur_PracticeAssignment","failOnStderr":"false"}},{"environment":{},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Mount Image Blob to WebApp","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"az webapp config storage-account add -g %rg_name% --name %java_app_service_name% --custom-id %customidimage% --storage-type AzureBlob --share-name %imageblob% --account-name %storageaccountname% --access-key %accesskey% --mount-path /home/site/wwwroot/webapps/ROOT/images","workingDirectory":"","failOnStderr":"false"}},{"environment":{},"taskId":"d9bafed4-0b18-4f58-968d-86655b4d2ce9","version":"2.*","name":"Mount Styles Blob to WebApp","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"script":"az webapp config storage-account add -g %rg_name% --name %java_app_service_name% --custom-id %customidstyles% --storage-type AzureBlob --share-name %stylesblob% --account-name %storageaccountname% --access-key %accesskey% --mount-path /home/site/wwwroot/webapps/ROOT/styles","workingDirectory":"","failOnStderr":"false"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test the Deployment","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$applicationId = \"$(clientId)\"\n$tenantId = \"$(tenantId)\"\n$rg_name = \"$(rg_name)\"\n$java_app_service_name = \"$(java_app_service_name)\"\n$securePassword = \"$(clientSecret)\" | ConvertTo-SecureString -AsPlainText -Force\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $applicationId, $securePassword\n\nLogin-AzureRmAccount -ServicePrincipal -Credential $credential -TenantId $tenantId\n\n$hostname = (Get-AzureRmWebApp -ResourceGroupName \"dev-bcs-qmotion-shades-cloud\" -Name \"uat-bcs-qm-companyapp-app\").DefaultHostName\n$url = 'https://'+$hostname\n Write-Output ($url)\n\n Try {\n Start-Sleep -Seconds 30\n [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n $urlstatuscode = (Invoke-WebRequest -uri $url -UseBasicParsing -Method get -ErrorAction SilentlyContinue).StatusCode\n Write-Output ($urlstatuscode)\n\n if($urlstatuscode -ne 200)\n                {\n                    Start-Sleep -Seconds 10\n                    $urlstatuscode  = (Invoke-WebRequest -uri $url -UseBasicParsing -Method get -ErrorAction SilentlyContinue ).StatusCode\n                }\n    }\ncatch [System.Net.WebException] {\n            $Request = $_.Exception\n            Write-host \"Exception caught: $Request\"\n            #Write-Output -------------------------------------------------------------------------------\n            \n            $urlstatuscode = ($_.Exception.Response.StatusCode.value__ ).ToString().Trim() \n             sed -i '$ a ##vso[task.logissue type=warning;]DeploymentFailed:'$urlstatuscode   \n    }\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"SSL Binding","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$applicationId = \"$(clientId)\"\n$tenantId = \"$(tenantId)\"\n$rg_name = \"$(rg_name)\"\n$fqdn = \"$(fqdn)\"\n$pfxPath = \"$(pfxPath)\"\n$pfxPassword = \"$(pfxPassword)\"\n\n$java_app_service_name = \"$(java_app_service_name)\"\n$securePassword = \"$(clientSecret)\" | ConvertTo-SecureString -AsPlainText -Force\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $applicationId, $securePassword\n\nLogin-AzureRmAccount -ServicePrincipal -Credential $credential -TenantId $tenantId\n\nNew-AzureRmWebAppSSLBinding -ResourceGroupName $rg_name -WebAppName $java_app_service_name -Name $fqdn -SslState SniEnabled -CertificateFilePath $pfxPath -CertificatePassword $pfxPassword\n\n\n\n\n\n\n","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"$(System.DefaultWorkingDirectory)/_PalakThakur_PracticeAssignment"}}]}],"environmentOptions":{"emailNotificationType":"OnlyOnFailure","emailRecipients":"release.environment.owner;release.creator","skipArtifactsDownload":false,"timeoutInMinutes":0,"enableAccessToken":false,"publishDeploymentStatus":true,"badgeEnabled":false,"autoLinkWorkItems":false,"pullRequestDeploymentEnabled":false},"demands":[],"conditions":[{"name":"ReleaseStarted","conditionType":1,"value":""}],"executionPolicy":{"concurrencyCount":1,"queueDepthCount":0},"schedules":[],"currentRelease":{"id":355,"url":"https://legrand-bcs.vsrm.visualstudio.com/6ac02ffa-afb5-4b17-8675-2eb537718218/_apis/Release/releases/355","_links":{}},"retentionPolicy":{"daysToKeep":30,"releasesToKeep":3,"retainBuild":true},"processParameters":{},"properties":{},"preDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"postDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"environmentTriggers":[],"badgeUrl":"https://legrand-bcs.vsrm.visualstudio.com/_apis/public/Release/badge/6ac02ffa-afb5-4b17-8675-2eb537718218/8/10"}],"artifacts":[{"sourceId":"50d5b917-3306-471c-87f0-f87e681a8c8a:PalakThakur/PracticeAssignment","type":"GitHub","alias":"_PalakThakur_PracticeAssignment","definitionReference":{"artifactSourceDefinitionUrl":{"id":"https://github.com/PalakThakur/PracticeAssignment","name":""},"branch":{"id":"master","name":"master"},"checkoutNestedSubmodules":{"id":"True","name":"Any nested submodules within"},"checkoutSubmodules":{"id":"","name":""},"connection":{"id":"50d5b917-3306-471c-87f0-f87e681a8c8a","name":"azuretoken"},"defaultVersionSpecific":{"id":"","name":""},"defaultVersionType":{"id":"latestFromBranchType","name":"Latest from the default branch"},"definition":{"id":"PalakThakur/PracticeAssignment","name":"PalakThakur/PracticeAssignment"},"fetchDepth":{"id":"","name":""},"gitLfsSupport":{"id":"","name":""}},"isRetained":false},{"sourceId":"6ac02ffa-afb5-4b17-8675-2eb537718218:7bcff3d5-3c99-4bf7-abfe-dcc6f17e89a9","type":"Git","alias":"Terraform","definitionReference":{"branches":{"id":"test","name":"test"},"checkoutNestedSubmodules":{"id":"True","name":"Any nested submodules within"},"checkoutSubmodules":{"id":"","name":""},"defaultVersionSpecific":{"id":"","name":""},"defaultVersionType":{"id":"latestFromBranchType","name":"Latest from the default branch"},"definition":{"id":"7bcff3d5-3c99-4bf7-abfe-dcc6f17e89a9","name":"ShadeCloud_TF"},"fetchDepth":{"id":"","name":""},"gitLfsSupport":{"id":"","name":""},"project":{"id":"6ac02ffa-afb5-4b17-8675-2eb537718218","name":"QMotionZigbeeXamarin2"}},"isPrimary":true,"isRetained":false}],"triggers":[],"releaseNameFormat":"Release-$(rev:r)","tags":[],"pipelineProcess":{"type":1},"properties":{"DefinitionCreationSource":{"$type":"System.String","$value":"ReleaseImport"},"IntegrateJiraWorkItems":{"$type":"System.String","$value":"false"}},"id":8,"name":"SITReleasePipeline","path":"\\","projectReference":null,"url":"https://legrand-bcs.vsrm.visualstudio.com/6ac02ffa-afb5-4b17-8675-2eb537718218/_apis/Release/definitions/8","_links":{"self":{"href":"https://legrand-bcs.vsrm.visualstudio.com/6ac02ffa-afb5-4b17-8675-2eb537718218/_apis/Release/definitions/8"},"web":{"href":"https://legrand-bcs.visualstudio.com/6ac02ffa-afb5-4b17-8675-2eb537718218/_release?definitionId=8"}}}